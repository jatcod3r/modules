name: TF CI/CD

on:
  workflow_call:
    inputs:
      approvers:
        required: false
        type: string
        default: ${{ vars.APPROVERS }}
      module-name:
        required: false
        type: string
        default: NO_JOB_NAME_PASSED
      working-directory:
        required: true
        type: string
      default-audience:
        type: string
        default: sts.amazonaws.com
        required: false
      s3-profile-name:
        type: string
        required: false
        default: demo-profile
      s3-profile-web-token-path:
        type: string
        default: /tmp/web_identity_token_file
        required: false
      ENV_VARS:
        type: string
        required: false
        default: ""
    secrets: 
      DEFAULT_ROLE:
        required: false
      DEFAULT_REGION:
        required: false
      S3_ROLE:
        required: false
      S3_REGION:
        required: false

jobs: 
  tf-fmt:
    uses: ./.github/workflows/tf-cicd.yaml
    permissions:
      id-token: write
      issues: write
      contents: read
    with:
      working-directory: ${{ inputs.working-directory }}
  
  tf-validate:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      issues: write
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working-directory }}

    steps:
    - uses: actions/checkout@v3

    - name: python-setup
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: add-custom-env
      run: echo '${{ inputs.ENV_VARS }}' >> $GITHUB_ENV

    - name: setup-default
      uses: aws-actions/configure-aws-credentials@v5.0.0
      with:
        audience: ${{ inputs.default-audience }}
        aws-region: ${{ secrets.DEFAULT_REGION }}
        role-to-assume: ${{ secrets.DEFAULT_ROLE }}

    - name: setup-s3-profile
      run: |
          aws configure set region ${{ secrets.S3_REGION }} --profile ${{ inputs.s3-profile-name }}
          aws configure set role_arn ${{ secrets.S3_ROLE }} --profile ${{ inputs.s3-profile-name }}
          curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | jq -r '.value' > ${{ inputs.s3-profile-web-token-path }}
          aws configure set web_identity_token_file "${{ inputs.s3-profile-web-token-path }}" --profile ${{ inputs.s3-profile-name }}

    - name: tf-setup
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.0
    
    - name: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ${{ inputs.working-directory }}
        framework: terraform 

    - name: tf-fmt
      run: terraform fmt -recursive -no-color
      continue-on-error: true

    - name: create-pr
      uses: peter-evans/create-pull-request@v7
      # https://github.com/marketplace/actions/create-pull-request
      with:
        commit-message: terraform fmt
        title: Format TF Files
        body: Update tf files to canonical format using `terraform fmt`
        branch: automated-terraform-fmt
      
    - name: automerge-pr
      if: steps.create_pr.outputs.pull-request-operation == 'created'
      # https://github.com/peter-evans/enable-pull-request-automerge
      uses: peter-evans/enable-pull-request-automerge@v3
      with:
        pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
        merge-method: squash
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: tf-init
      run: terraform init

    - name: tf-test
      run: terraform test

  manual-approval:
    name: manual-approval
    runs-on: ubuntu-latest
    needs: tf-validate
    if: success()

    permissions:
      issues: write
      contents: read
    
    steps:
    - name: wait-for-approval
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.Token }}
        approvers: ${{ inputs.approvers }}
        minimum-approvals: 1
        issue-title: "Manual approval required to `tf apply` on `${{ inputs.module-name }}`."
        issue-body: "Please approve/deny the deployment."
        exclude-workflow-inititator-as-approver: false

